rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read/write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Tours - published tours are readable by all, writable by admins only
    match /tours/{tourId} {
      allow read: if resource.data.published == true;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Stays - approved stays are readable by all, anyone can create, admins can approve
    match /stays/{stayId} {
      allow read: if resource.data.approved == true;
      allow create: if true; // Anyone can submit
      allow update, delete: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Bookings - users can create and read their own, admins can read/update all
    match /bookings/{bookingId} {
      allow create: if request.auth != null;
      allow read, update: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }

    // Reviews - approved reviews are readable by all, users can create, admins can approve
    match /reviews/{reviewId} {
      allow read: if resource.data.approved == true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Inquiries - anyone can create, admins can read/update
    match /inquiries/{inquiryId} {
      allow create: if true;
      allow read, update: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
